- name: software | ssh | generate SSH key
  user:
    name: "{{ the_user }}"
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_file: .ssh/id_ed25519

- name: software | ssh | check if gh exists
  shell: command -v gh
  register: gh_exists
  ignore_errors: yes

- name: software | ssh | download githubcli-archive-keyring.gpg
  when: gh_exists is failed
  get_url:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    dest: /usr/share/keyrings/githubcli-archive-keyring.original.gpg

- name: software | ssh | run gpg on githubcli-archive-keyring.gpg
  when: gh_exists is failed
  shell: cat /usr/share/keyrings/githubcli-archive-keyring.original.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
  become: true

- name: software | ssh | add gh package repository source
  when: gh_exists is failed
  apt_repository:
    filename: /etc/apt/sources.list.d/github-cli.list
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    update_cache: yes

- name: software | ssh | install gh
  apt:
    name: gh
    state: latest

- name: software | ssh | ensure token file
  copy:
    dest: /tmp/token.txt
    content: "{{ github_token }}"

- name: software | ssh | setup github with generated ssh key
  become_user: "{{ the_user }}"
  when: gh_exists is failed
  shell: |
    gh auth login --with-token < /tmp/token.txt
    gh ssh-key add /home/{{ the_user }}/.ssh/id_ed25519.pub

- name: software | ssh | ensure github.com is a known host
  known_hosts:
    path: '/home/{{ the_user }}/.ssh/known_hosts'
    name: 'github.com'
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
